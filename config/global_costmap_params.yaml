global_costmap:
   global_frame: /map
   robot_base_frame: /base_footprint
   update_frequency: 3.0    #1.0
   publish_frequency: 2.0   #0.5
   static_map: true
   rolling_window: false
   transform_tolerance: 0.5
   plugins: 
     - {name: static_layer,            type: "costmap_2d::StaticLayer"}
     - {name: obstacle_layer,          type: "costmap_2d::VoxelLayer"}
     - {name: inflation_layer,         type: "costmap_2d::InflationLayer"}

  # http://wiki.ros.org/navigation/Tutorials/RobotSetup
    # The "static_map" parameter determines whether or not the costmap should initialize itself based on a map served by the map_server. 
    # If you aren't using an existinsg map or map server, set the static_map parameter to false. 

  # The rolling_window parameter keeps the robot in the center of the costmap as it moves throughout the world, 
  # dropping obstacle information from the map as the robot moves too far from a given area.
  # This type of configuration is most often used in an odometric coordinate frame where the robot only cares about obstacles within a local area.